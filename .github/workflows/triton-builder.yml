name: Triton Stable Build

on:
  workflow_dispatch:
    inputs:
      run_latest_release_build:
        description: 'ðŸš€ Build a full release from the LATEST Triton release tag?'
        type: boolean
        default: false

jobs:
  # ===================================================================
  # JOB 1: Latest Release Tag Build (Manually Triggered)
  # ===================================================================
  # This job now uses the GitHub API, which is much faster than cloning the repo.
  discover-latest-tag:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.run_latest_release_build
    runs-on: ['self-hosted', 'x64-docker']
    outputs:
      tag: ${{ steps.get-tag.outputs.tag }}
    steps:
      - name: Get latest Triton tag via GitHub API
        id: get-tag
        env:
          # The GITHUB_TOKEN is automatically created by Actions to authenticate API calls.
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # This step uses 'curl' to get the list of all tags and 'jq' to parse the first one.
          # It relies on the assumption that the /tags API endpoint returns tags in reverse chronological order.
          # Prerequisite: The runner must have 'jq' installed.
          if ! command -v jq &> /dev/null; then
            echo "::error::'jq' is not installed on this runner. Please install it to proceed."
            exit 1
          fi

          echo "Fetching tags list from api.github.com/repos/triton-lang/triton/tags..."
          # The jq query '.[0].name' gets the 'name' field from the first object in the returned JSON array.
          latest_tag=$(curl -sL -H "Accept: application/vnd.github+json" -H "Authorization: Bearer $GH_TOKEN" \
            https://api.github.com/repos/triton-lang/triton/tags | jq -r '.[0].name')

          if [ -z "$latest_tag" ] || [ "$latest_tag" == "null" ]; then
            echo "::error::Failed to fetch the latest tag from GitHub API using the /tags endpoint."
            exit 1
          fi

          echo "Discovered latest Triton tag: ${latest_tag}"
          echo "tag=${latest_tag}" >> $GITHUB_OUTPUT

  # ===================================================================
  # JOB 2: Stable Triton Build (Manually Triggered)
  # ===================================================================
  # This job executes the build using the tag discovered in the previous job.
  execute-release-build:
    needs: discover-latest-tag
    if: needs.discover-latest-tag.outputs.tag != ''
    strategy:
      fail-fast: false
      matrix:
        config:
        - {runs_on: "['self-hosted', 'x64-docker']", arch: 'x86_64', timeout: 120}
        - {runs_on: "['self-hosted', 'aarch64-docker']", arch: 'aarch64', timeout: 720}
    uses: ./.github/workflows/reusable-build-triton.yml
    with:
      runner: ${{ matrix.config.runs_on }}
      arch: ${{ matrix.config.arch }}
      timeout: ${{ matrix.config.timeout }}
      checkout-ref: ${{ needs.discover-latest-tag.outputs.tag }}
      package-name: 'triton'
      cibw-build: 'cp3*-manylinux_${{ matrix.config.arch }}'
      cibw-skip: 'cp{35,36,37,38,39}-*'
    secrets: inherit
