name: nvidia-4090-ci

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

on:
  pull_request:
    branches: [ '*' ]
    types: [opened, synchronize, reopened, closed]
  push:
    branches:
      - main
    tags:
      - '*'

jobs:
  test:
    if: github.event_name != 'pull_request' || github.event.action != 'closed'
    runs-on: 'nvidia-4090'
    env:
      FLA_CI_ENV: 1
    steps:
      - name: Check out repo
        uses: actions/checkout@v4

      - name: Check skip keyword in LATEST commit (Push only)
        id: check_skip
        run: |
          if [ "${{ github.event_name }}" = "push" ] && ! [[ "${{ github.ref }}" =~ ^refs/tags/ ]]; then
            COMMIT_MSG=$(jq -r '.head_commit.message' <<< '${{ toJSON(github.event) }}')
            echo "Latest commit message: $COMMIT_MSG"
            if echo "$COMMIT_MSG" | grep -qF "[skip test]"; then
              echo "::notice::Tests skipped by commit message"
              echo "skip_tests=true" >> $GITHUB_OUTPUT
            else
              echo "skip_tests=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "skip_tests=false" >> $GITHUB_OUTPUT
          fi

      - name: Get changed files
        if: |
          (github.event_name == 'pull_request' ||
          (github.event_name == 'push' && !startsWith(github.ref, 'refs/tags/'))) &&
          (steps.check_skip.outputs.skip_tests != 'true' || github.event_name != 'push')
        id: changed-files
        uses: tj-actions/changed-files@v46.0.3

      - name: Find dependent test files
        if: |
          (github.event_name == 'pull_request' ||
          (github.event_name == 'push' && !startsWith(github.ref, 'refs/tags/'))) &&
          (steps.check_skip.outputs.skip_tests != 'true' || github.event_name != 'push')
        id: find-dependent-tests
        run: |
          # Run the Python script to find dependent test files
          TEST_FILES=$(python scripts/find_dependent_tests.py "${{ steps.changed-files.outputs.all_changed_files }}")
          echo "test_files=$TEST_FILES" >> $GITHUB_OUTPUT

      - name: Setup python
        if: steps.find-dependent-tests.outputs.test_files && steps.check_skip.outputs.skip_tests == 'false'
        run: |
          pip uninstall -y flash-linear-attention
          # Installed by hand to avoid issues with pip
          # pip install -U pytest setuptools wheel ninja torch triton
          # MAX_JOBS=4 pip install -U flash-attn --no-build-isolation
          # pip install git+https://github.com/Dao-AILab/causal-conv1d.git --no-build-isolation
          pip install --no-use-pep517 .

      - name: Check GPU status
        if: steps.find-dependent-tests.outputs.test_files && steps.check_skip.outputs.skip_tests == 'false'
        run: |
          python scripts/check_gpu.py
          if [ $? -ne 0 ]; then
            echo "GPU is occupied. Stopping the workflow."
            exit 1
          fi

      - name: Test compiling on changed test files
        if: steps.find-dependent-tests.outputs.test_files && steps.check_skip.outputs.skip_tests == 'false'
        run: |
          FLA_COMPILER_MODE=1 TRITON_PRINT_AUTOTUNING=0 SKIP_TEST_CHUNK_VARLEN=1 \
            pytest ${{ steps.find-dependent-tests.outputs.test_files }}

      - name: Run pytest on test files
        continue-on-error: true
        if: steps.find-dependent-tests.outputs.test_files && steps.check_skip.outputs.skip_tests == 'false'
        run: |
          FLA_COMPILER_MODE=0 TRITON_PRINT_AUTOTUNING=0 SKIP_TEST_CHUNK_VARLEN=1 \
            pytest ${{ steps.find-dependent-tests.outputs.test_files }}

      - name: Run pytest on varlen test files
        if: steps.find-dependent-tests.outputs.test_files && steps.check_skip.outputs.skip_tests == 'false'
        continue-on-error: true
        run: |
          FLA_COMPILER_MODE=0 TRITON_PRINT_AUTOTUNING=0 SKIP_TEST_CHUNK_VARLEN=0 \
            pytest ${{ steps.find-dependent-tests.outputs.test_files }} || \
            echo "Varlen tests failed (non-critical)"

      - name: Test full compiling on all test files
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') && steps.check_skip.outputs.skip_tests == 'false'
        run: |
          FLA_COMPILER_MODE=1 TRITON_PRINT_AUTOTUNING=0 SKIP_TEST_CHUNK_VARLEN=1 \
            pytest tests/

      - name: Run full pytest on test files
        continue-on-error: true
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') && steps.check_skip.outputs.skip_tests == 'false'
        run: |
          FLA_COMPILER_MODE=0 TRITON_PRINT_AUTOTUNING=0 SKIP_TEST_CHUNK_VARLEN=1 \
            pytest ${{ steps.find-dependent-tests.outputs.test_files }}

      - name: Run full pytest on varlen test files
        continue-on-error: true
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') && steps.check_skip.outputs.skip_tests == 'false'
        run: |
          FLA_COMPILER_MODE=0 TRITON_PRINT_AUTOTUNING=0 SKIP_TEST_CHUNK_VARLEN=0 \
            pytest ${{ steps.find-dependent-tests.outputs.test_files }} || \
            echo "Varlen tests failed (non-critical)"
